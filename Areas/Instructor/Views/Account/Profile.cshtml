@model InstructorAccountVm

@{
    ViewData["Title"] = "Profile";
}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    const uploadProfile = async (id) => {
        const { value: file } = await Swal.fire({
            title: "Select image",
            input: "file",
            inputAttributes: {
                "accept": "image/*",
                "aria-label": "Upload your profile picture"
            }
        });

        const data = new FormData();

        data.append('file', file);

        if (file) {
            console.log(file);
            console.log(id);

            showLoading();

            $.ajax({
                type: 'POST',
                url: `/Instructor/Account/UploadProfileImage/${id}`,
                data: data,
                processData: false,
                contentType: false,
                success: (response) => {
                    const profileContainer = document.getElementById('profile_Container');
                    const image = document.createElement('img');
                    image.src = URL.createObjectURL(file);
                    image.classList.add('img-fluid');
                    profileContainer.removeChild(profileContainer.firstElementChild);
                    profileContainer.appendChild(image);

                    const profileActions_Container = document.getElementById('profileActions_Container');
                    profileActions_Container.innerHTML = `
                                <a class="btn btn-success" onclick="changeProfile('@Model.Id')">
                                Change
                            </a>
                            <a class="btn btn-danger" onclick="deleteProfile('@Model.Id')">Delete</a>
                        `;

                    hideLoading();

                    showToaster("Profile Image Uploaded");
                },
                error: function (xhr, status, error) {
                    console.log(xhr.responseText);
                    hideLoading();

                }
            });
        }
    }

    const changeProfile = async (id) => {
        const { value: file } = await Swal.fire({
            title: "Select image",
            input: "file",
            inputAttributes: {
                "accept": "image/*",
                "aria-label": "Change your profile picture"
            }
        });

        const data = new FormData();

        data.append('file', file);

        if (file) {
            console.log(file);
            console.log(id);

            showLoading();

            $.ajax({
                type: 'PUT',
                url: `/Instructor/Account/ChangeProfileImage/${id}`,
                data: data,
                processData: false,
                contentType: false,
                success: (response) => {
                    const profileContainer = document.getElementById('profile_Container');
                    const image = document.createElement('img');
                    image.src = URL.createObjectURL(file);
                    image.classList.add('img-fluid');
                    profileContainer.removeChild(profileContainer.firstElementChild);
                    profileContainer.appendChild(image);

                    hideLoading();

                    showToaster("Profile Image Changed");
                },
                error: function (xhr, status, error) {
                    console.log(xhr.responseText);
                    hideLoading();

                }
            });


        }
    }

    const deleteProfile = (id) => {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                showLoading();
                $.ajax({
                    type: 'DELETE',
                    url: `/Instructor/Account/DeleteProfileImage/${id}`,
                    success: (data) => {

                        const profileContainer = document.getElementById('profile_Container');
                        const image = document.createElement('img');
                        image.src = "/Assets/panel/assets/img/icon/user.png";
                        image.classList.add('img-fluid');
                        profileContainer.removeChild(profileContainer.firstElementChild);
                        profileContainer.appendChild(image);

                        const profileActions_Container = document.getElementById('profileActions_Container');
                        profileActions_Container.innerHTML = `
                                <a class="btn btn-success" onclick="uploadProfile('@Model.Id')">
                                    Upload
                                </a>
                            `;

                        hideLoading();

                        Swal.fire({
                            title: "Deleted!",
                            text: "Your file has been deleted.",
                            icon: "success"
                        });

                    }
                });


            }
        });
    }

    function showLoading() {
        const loader = document.querySelector('.loader-container');
        loader.classList.add('active');
    }

    function hideLoading() {
        const loader = document.querySelector('.loader-container');
        loader.classList.remove('active');
    }

    function showToaster(content) {
        Command: toastr["success"](content);
        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "500",
            "timeOut": "1000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
    }

</script>


@section Scripts {
    @if (TempData["ProfileUpdated"] != null && (bool)TempData["ProfileUpdated"] == true)
    {

        <script>
            Command: toastr["success"]("Profile has been updated.");
            toastr.options = {
                "closeButton": false,
                "debug": false,
                "newestOnTop": false,
                "progressBar": false,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "500",
                "timeOut": "1000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };
        </script>
    }

    @if (TempData["PasswordUpdated"] != null && (bool)TempData["PasswordUpdated"] == true)
    {
        <script>
            Command: toastr["success"]("Password Has Been Changed Suuccessfully.");
            toastr.options = {
                "closeButton": false,
                "debug": false,
                "newestOnTop": false,
                "progressBar": false,
                "positionClass": "toast-bottom-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "500",
                "timeOut": "1000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };
        </script>
    }
}

<div class="loader-container">
    <div class="loader"></div>
</div>

<div class="settings-widget profile-details"  data-select2-id="8">
    <div class="settings-menu p-0"  data-select2-id="7">
        <div class="profile-heading" >
            <h3>Profile Details</h3>
            <p>You have full control to manage your own account setting.</p>
        </div>
        <div class="course-group mb-0 d-flex" >
            <div class="course-group-img d-flex align-items-center" >
                @if (string.IsNullOrEmpty(Model.ProfileName) && string.IsNullOrEmpty(Model.ProfilePathOrContainer))
                {
                    <a href="" class="mr-3" id="profile_Container"><img src="/Assets/panel/assets/img/icon/user.png" alt="" class="img-fluid"></a>
                }
                else
                {
                    <a href="" class="mr-3" id="profile_Container"><img src="@Model.BaseUrl/@Model.ProfilePathOrContainer/@Model.ProfileName" alt="" class="img-fluid"></a>
                }

                <div class="course-name ml-2" >
                    <h4><a href="instructor-profile.html">Your avatar</a></h4>
                    <p>PNG or JPG no bigger than 800px wide and tall.</p>
                </div>
            </div>
            <div class="profile-share d-flex align-items-center justify-content-center"  id="profileActions_Container">
                @if (string.IsNullOrEmpty(Model.ProfileName) && string.IsNullOrEmpty(Model.ProfilePathOrContainer))
                {
                    <a class="btn btn-success" onclick="uploadProfile('@Model.Id')">
                        Upload
                    </a>
                }
                else
                {
                    <a class="btn btn-success" onclick="changeProfile('@Model.Id')">
                        Change
                    </a>
                    <a class="btn btn-danger" onclick="deleteProfile('@Model.Id')">Delete</a>
                }


            </div>
        </div>
        <div class="checkout-form personal-address add-course-info" >
            <div class="personal-info-head" >
                <h4>Personal Details</h4>
                <p>Edit your personal information and address.</p>
            </div>
            <form method="post" onsubmit="showLoading()">
                <input hidden asp-for="Id">
                <input hidden asp-for="IsEmailConfirmed">
                <div class="row" >
                    <div class="col-lg-6" >
                        <div class="input-block" >
                            <label class="form-control-label" asp-for="FirstName"></label>
                            <input type="text" class="form-control" placeholder="Enter your first Name" asp-for="FirstName">
                            <span class="text-danger" asp-validation-for="FirstName"></span>
                        </div>
                    </div>
                    <div class="col-lg-6" >
                        <div class="input-block" >
                            <label class="form-control-label" asp-for="LastName"></label>
                            <input type="text" class="form-control" placeholder="Enter your last Name" asp-for="LastName">
                            <span class="text-danger" asp-validation-for="LastName"></span>
                        </div>
                    </div>

                    <div class="col-lg-6" >
                        <div class="input-block" >
                            <label class="form-control-label" asp-for="EmailAddress"></label>
                            @if (Model.IsEmailConfirmed)
                            {
                                <input type="email" class="form-control" placeholder="Enter your Email " asp-for="EmailAddress" readonly="readonly">

                            }
                            else
                            {
                                <input type="email" class="form-control" placeholder="Enter your Email " asp-for="EmailAddress">
                            }
                            <span class="text-danger" asp-validation-for="EmailAddress"></span>
                        </div>
                    </div>
                    <div class="col-lg-6" >
                        <div class="input-block" >
                            <label class="form-control-label" asp-for="PhoneNumber"></label>
                            <input type="text" class="form-control" placeholder="Enter your phone number" asp-for="PhoneNumber">
                            <span class="text-danger" asp-validation-for="PhoneNumber"></span>
                        </div>
                    </div>
                    <div class="col-lg-6" >
                        <div class="input-block" >
                            <label class="form-control-label" asp-for="CountryOfBirth"></label>
                            <input type="text" class="form-control" asp-for="CountryOfBirth">
                            <span class="text-danger" asp-validation-for="CountryOfBirth"></span>
                        </div>
                    </div>
                    <div class="col-lg-6" >
                        <div class="input-block" >
                            <label class="form-control-label" asp-for="CountryOfResidence"></label>
                            <input type="text" class="form-control" asp-for="CountryOfResidence">
                            <span class="text-danger" asp-validation-for="CountryOfResidence"></span>
                        </div>
                    </div>
                    <div class="col-lg-6" >
                        <div class="input-block" >
                            <label class="form-control-label" asp-for="Profession"></label>
                            <input type="text" class="form-control" asp-for="Profession">
                            <span class="text-danger" asp-validation-for="Profession"></span>
                        </div>
                    </div>
                    <div class="col-lg-12" >
                        <div class="input-block" >
                            <label class="form-control-label" asp-for="Description"></label>
                            <textarea type="text" class="form-control" asp-for="Description"></textarea>
                        </div>
                    </div>
                    <div class="col-lg-12" >
                        <div class="input-block" >
                            <label class="form-control-label" asp-for="AdditionalNotes"></label>
                            <input type="text" class="form-control" asp-for="AdditionalNotes">
                        </div>
                    </div>
                    <div class="update-profile" >
                        <button type="submit" class="btn btn-primary">Update Profile</button>
                    </div>
                </div>
            </form>
        </div>
        <div class="checkout-form personal-address change-password-form">
            <div class="personal-info-head">
                <h4>Personal Details</h4>
                <p>Edit your personal information and address.</p>
            </div>
            <form method="post" onsubmit="showLoading()" action="/Instructor/Account/ChangePassword">
                <input hidden asp-for="Id">
                <div class="row flex-column  gap-3">
                    <div class="col-lg-6">
                        <div class="input-block">
                            <label class="form-control-label" asp-for="Password"></label>
                            <div class="input-group">
                                <input type="password" class="form-control" aria-describedby="password-button" asp-for="Password" id="password">
                                <button class="btn btn-outline-secondary" type="button" id="password-button" onclick="togglePasswordVisibility('password', 'password-button-icon')">
                                    <i class="fas fa-eye" id="password-button-icon"></i>
                                </button>
                            </div>
                            <span class="text-danger" asp-validation-for="Password"></span>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="input-block">
                            <label class="form-control-label" asp-for="ConfirmPassword"></label>
                            <div class="input-group">
                                <input type="password" class="form-control" aria-describedby="password-confirm-button" asp-for="ConfirmPassword" id="confirm-password">
                                <button class="btn btn-outline-secondary" type="button" id="password-confirm-button" onclick="togglePasswordVisibility('confirm-password', 'password-confirm-button-icon')">
                                    <i class="fas fa-eye" id="password-confirm-button-icon"></i>
                                </button>
                            </div>
                            <span class="text-danger" asp-validation-for="ConfirmPassword"></span>
                        </div>
                    </div>
                    <div class="update-profile">
                        <button type="submit" class="btn btn-primary">Update Password</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


<script>
    function togglePasswordVisibility(passwordFieldId, iconId) {
        var passwordField = document.getElementById(passwordFieldId);
        var icon = document.getElementById(iconId);
        if (passwordField.type === "password") {
            passwordField.type = "text";
            icon.classList.remove('fa-eye');
            icon.classList.add('fa-eye-slash');
        } else {
            passwordField.type = "password";
            icon.classList.remove('fa-eye-slash');
            icon.classList.add('fa-eye');
        }
    }
</script>