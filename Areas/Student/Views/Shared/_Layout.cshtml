@using CodinaxProjectMvc.Constants
@using CodinaxProjectMvc.DataAccess.Abstract.Repositories
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject IReadRepository<Student> _studentReadRepository
@inject IConfiguration _configuration

<!DOCTYPE html>
<html lang="en">

@{
    var isCoursesPage = ViewContext.RouteData.Values["controller"]?.ToString()?.ToLower() == "courses";
    var isEventsPage = ViewContext.RouteData.Values["controller"]?.ToString()?.ToLower() == "events";
    var isBookmarksPage = ViewContext.RouteData.Values["controller"]?.ToString()?.ToLower() == "bookmarks";
    var isDashboardPage = ViewContext.RouteData.Values["controller"]?.ToString()?.ToLower() == "dashboard";
}

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0">
    <title>Codinax Student Panel</title>


    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/Assets/panel/assets/css/bootstrap.min.css">

    <!-- Main CSS -->
    <link rel="stylesheet" href="/Assets/panel/assets/css/style.css" />

    <!-- Fontawesome CSS -->
    <link rel="stylesheet" href="/Assets/panel/assets/plugins/fontawesome/css/fontawesome.min.css">
    <link rel="stylesheet" href="/Assets/panel/assets/plugins/fontawesome/css/all.min.css">

    <!-- Feather CSS -->
    <link rel="stylesheet" href="/Assets/panel/assets/css/feather.css">

    <!-- Select2 CSS -->
    <link rel="stylesheet" href="/Assets/panel/assets/plugins/select2/css/select2.min.css">


    <!-- Loader CSS -->
    <link rel="stylesheet" href="/Assets/panel/assets/css/loader.css">

    <link rel="stylesheet" href="https://unpkg.com/tippy.js@6/animations/scale.css" />

    @await RenderSectionAsync("Styles", required: false)

    <!-- Toastr CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.css"
          crossorigin="anonymous" referrerpolicy="no-referrer" />



    <link rel="shortcut icon" type="image/x-icon" href="/Assets/imgs/logos/X( white ).png">
    <meta name="author" content="Farhad Jahangirov">

</head>

<body>
    <div class="container_view">
        <!-- Side Bar -->
        <div class="sidemenu_position">
            <div class="active-overlay pointer" onclick="toggleMenu()"></div>

            <div class="sidemenu_view">
                <div class="sidemenu_bar">
                    <a class="sidemenu_logo">
                        <img src="~/Assets/imgs/logos/CODINAX ( white ).png" width="180">
                    </a>

                    <div class="close pointer">
                        <svg-icon height="20" name="close" width="20">
                            <svg class="align-middle" width="20" height="20">
                                <use xlink:href="#close"></use>
                            </svg>
                        </svg-icon>
                    </div>

                    <div class="sidemenu_user">
                        <div class="sidemenu_profile">
                            <div class="avatar-container" style="width: 120px; height: 120px;">
                                @if (string.IsNullOrEmpty(_studentReadRepository.Table.Single(x => x.Email == User.Identity.Name).ProfileImageName))
                                {
                                    <div class="avatar-content" style="text-align: center; text-transform: uppercase; color: rgb(255, 255, 255); background-color: rgb(127, 140, 141); font: 46px / 140px Helvetica, Arial, sans-serif;">
                                        @(
                                            _studentReadRepository.Table.Single(x => x.Email ==
                                            User.Identity.Name).FirstName[0].ToString()
                                            )@(
                                            _studentReadRepository.Table.Single(x => x.Email ==
                                            User.Identity.Name).LastName[0].ToString()
                                            )
                                    </div>

                                }
                                else
                                {
                                    <div class="avatar-content" style="text-align: center; border-radius: 100%;height: 100%">
                                        <img class="img-fluid" src="@_configuration[ConfigurationStrings.AzureBaseUrl]/@_studentReadRepository.Table.Single(x => x.Email ==
                                    User.Identity.Name).ProfileImagePathOrContainer/@_studentReadRepository.Table.Single(x => x.Email ==
                                    User.Identity.Name).ProfileImageName" style="width: 100%;height: 100%;object-fit: cover;">
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="edit_profile_icon" id="editProfileIcon">
                            <svg-icon height="20px" id="avatar-icon-popOver" name="ns-edit-icon" width="20px">
                                <i class="fa-solid fa-pen-to-square align-middle"></i>
                            </svg-icon>
                        </div>

                        <div id="avatar-container-popover" class="avatar-pop-over">
                            <div class="avatar-holder">
                                <div class="avatar-user">
                                    <!---->
                                    <div class="avatar-container" style="width: 140px; height: 140px;">
                                        @if (string.IsNullOrEmpty(_studentReadRepository.Table.Single(x => x.Email == User.Identity.Name).ProfileImageName))
                                        {
                                            <div class="avatar-content" style="text-align: center; border-radius: 100%; text-transform: uppercase; color: rgb(255, 255, 255); background-color: rgb(127, 140, 141); font: 46px / 140px Helvetica, Arial, sans-serif;">
                                                @(
                                                    _studentReadRepository.Table.Single(x => x.Email ==
                                                    User.Identity.Name).FirstName[0].ToString()
                                                    )@(
                                                    _studentReadRepository.Table.Single(x => x.Email ==
                                                    User.Identity.Name).LastName[0].ToString()
                                                    )
                                            </div>

                                        }
                                        else
                                        {
                                            <div class="avatar-content" style="text-align: center; border-radius: 100%;height: 100%">
                                                <img class="img-fluid" src="@_configuration[ConfigurationStrings.AzureBaseUrl]/@_studentReadRepository.Table.Single(x => x.Email ==
                                            User.Identity.Name).ProfileImagePathOrContainer/@_studentReadRepository.Table.Single(x => x.Email ==
                                            User.Identity.Name).ProfileImageName" style="width: 100%;height: 100%;object-fit: cover;">
                                            </div>
                                        }
                                    </div>
                                    <!---->
                                </div>
                            </div>
                            <div class="buttons-avatar-container">
                                <div class="buttons-avatar-wrapper">
                                    <a class="button-avatar-action action--change" href="/Student/Account/Profile">
                                        <i class="fa-solid fa-pen-to-square align-middle"></i>

                                        Edit profile
                                    </a>
                                    <!---->
                                </div>
                            </div>
                        </div>



                        <div class="sidemenu_profile_info">
                            Hi @(
                             _studentReadRepository.Table.Single(x => x.Email == User.Identity.Name).FirstName)


                        </div>
                    </div>

                    <ul class="sidemenu_items">
                        <li>
                            <a class="@(isDashboardPage ? "sidemenu_link_active" : "") sidemenu_link"
                               href="/Student/Dashboard/Index">
                                <svg-icon height="20px" width="20px">
                                    <i class="fa-solid fa-landmark align-middle"></i>
                                </svg-icon>
                                <span>Dashboard</span>
                            </a>
                        </li>
                        <li>
                            <a class="@(isCoursesPage ? "sidemenu_link_active" : "") sidemenu_link"
                               href="/Student/Courses/Index">
                                <svg-icon height="20px" width="20px">
                                    <i class="fa-solid fa-layer-group align-middle"></i>
                                </svg-icon>
                                <span>Courses</span>
                            </a>
                        </li>

                        <li>
                            <a class="@(isBookmarksPage ? "sidemenu_link_active" : "") sidemenu_link"
                               href="/Student/Bookmarks/Index">
                                <svg-icon height="20px" width="20px">
                                    <i class="fa-regular fa-bookmark align-middle"></i>
                                </svg-icon>
                                <span>Bookmarks</span>
                            </a>
                        </li>

                        <li>
                            <a class="@(isEventsPage ? "sidemenu_link_active" : "") sidemenu_link"
                               href="/Student/Events/Index">
                                <svg-icon height="20px" width="20px">
                                    <i class="fa-solid fa-calendar align-middle"></i>
                                </svg-icon>
                                <span>Calendar</span>
                            </a>
                        </li>

                    </ul>
                </div>
            </div>

        </div>

        <main class="main_container">
            <header class="header_container">
                <div class="header_left">
                    <div class="header_search_container">
                        <input class="header_search_input" type="text" placeholder="Search" oninput="searchContent(event)" />
                        <div class="header_search_icon">
                            <i class="fa-solid fa-magnifying-glass align-middle"></i>
                        </div>
                    </div>
                </div>
                <div class="pointer burger-icon ml-2" onclick="toggleMenu()">
                    <i class="fa-solid fa-bars-staggered align-middle"></i>
                </div>
                <div class="header_right">
                    <div class="popup-wrapper">
                        <button class="ml-2 settings-button">
                            <i class="fa-solid fa-gear align-middle"></i>
                        </button>

                        <div class="dropdown-content day-switch-dropdown">
                            <div class="dropdown-holder">
                                <div class="theme-change">
                                    <div class="item-settings-holder">
                                        <div class="Header-State" data-theme-state="light">
                                            <i class="fa-solid fa-moon"></i>
                                            <label class="Header-Switch">
                                                <input type="checkbox" class="Checkbox-Toggle" data-theme-state="light">
                                                <span class="Switch-Slider Switch-Slider-round"></span>
                                            </label>
                                            <i class="fa-solid fa-sun"></i>
                                        </div>
                                        <span>Theme</span>
                                    </div>
                                </div>

                                <div class="theme-change" style="margin-top: 20px">
                                    <div class="item-settings-holder">
                                        <a class="Header-State" style="margin: 0" href="/auth/logout">
                                            <div class="Header-Switch" style="width: 0px; margin: 0;width: fit-content">
                                                <i class="fa-solid fa-right-from-bracket"></i>
                                            </div>
                                        </a>
                                        <span>Log Out</span>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </header>

            <div class="main_content">
                <div class="main_wrapper">
                    @RenderBody()
                </div>
            </div>
        </main>
    </div>




    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.js"
            integrity="sha512-+k1pnlgt4F1H8L7t3z95o3/KO+o78INEcXTbnoJQ/F2VqDVhWoaiVml/OEHv9HsVgxUaVW+IbiZPUJQfF/YxZw=="
            crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"
            integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g=="
            crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <!-- Ckeditor JS -->
    <script src="/Assets/panel/assets/js/ckeditor.js"></script>


    <!-- Toastr JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js" crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>



    <script src="https://unpkg.com/@@popperjs/core@2"></script>
    <script src="https://unpkg.com/tippy.js@6"></script>

    <script>
        function toggleMenu() {
            const sidemenu = document.querySelector('.sidemenu_position');
            if (sidemenu.classList.contains('active')) {
                if ($('#avatar-container-popover').hasClass('active')) {
                    $('#avatar-container-popover').removeClass('active');
                }
                sidemenu.classList.remove('active');
            }
            else {
                sidemenu.classList.add('active');
            }
        }

        function searchContent(event) {
            $.ajax({
                type: 'POST',
                url: `/student/search?content=${event.target.value}`,
                success: (response) => {
                    $('.main_content .main_wrapper').html(response);
                },
                error: (data) => {
                    console.log(data);
                }
            })
        }

        document.addEventListener('DOMContentLoaded', function () {

            const theme = localStorage.getItem('theme-state');

            $('.settings-button').click(() => {
                if ($('.popup-wrapper .dropdown-content').hasClass('active')) {
                    $('.popup-wrapper .dropdown-content').removeClass('active')
                }
                else {
                    $('.popup-wrapper .dropdown-content').addClass('active')
                }
            });


            if (theme === null) {
                $('body').addClass('Light-Theme');
                $('body').data('theme-state', 'light').attr('data-theme-state', 'light');

                $('.popup-wrapper .Header-State').data('theme-state', 'light').attr('data-theme-state', 'light');
                $('.popup-wrapper .Checkbox-Toggle').data('theme-state', 'light').attr('data-theme-state', 'light');

            }
            else if (theme === 'light') {
                $('.popup-wrapper .Header-State').data('theme-state', 'light').attr('data-theme-state', 'light');
                $('.popup-wrapper .Checkbox-Toggle').data('theme-state', 'light').attr('data-theme-state', 'light');

                $('body').removeClass('Dark-Theme');
                $('body').addClass('Light-Theme');

                $('body').data('theme-state', 'light').attr('data-theme-state', 'light');

            }
            else if (theme === 'dark') {


                $('.popup-wrapper .Header-State').data('theme-state', 'dark').attr('data-theme-state', 'dark');
                $('.popup-wrapper .Checkbox-Toggle').data('theme-state', 'dark').attr('data-theme-state', 'dark');

                $('body').removeClass('Light-Theme');
                $('body').addClass('Dark-Theme');

                $('body').data('theme-state', 'dark').attr('data-theme-state', 'dark');

            }


            $('.popup-wrapper .Checkbox-Toggle').click(() => {
                console.log($('.Header-State').data('theme-state'));

                if ($('.popup-wrapper .Header-State').data('theme-state') === 'light') {
                    $('.popup-wrapper .Header-State').data('theme-state', 'dark').attr('data-theme-state', 'dark');
                    $('.popup-wrapper .Checkbox-Toggle').data('theme-state', 'dark').attr('data-theme-state', 'dark');

                    $('body').removeClass('Light-Theme');
                    $('body').addClass('Dark-Theme');

                    $('body').data('theme-state', 'dark').attr('data-theme-state', 'dark');

                    localStorage.setItem('theme-state', 'dark');
                }
                else {
                    $('.popup-wrapper .Header-State').data('theme-state', 'light').attr('data-theme-state', 'light');
                    $('.popup-wrapper .Checkbox-Toggle').data('theme-state', 'light').attr('data-theme-state', 'light');

                    $('body').removeClass('Dark-Theme');
                    $('body').addClass('Light-Theme');

                    $('body').data('theme-state', 'light').attr('data-theme-state', 'light');

                    localStorage.setItem('theme-state', 'light');
                }
            })


            $('#editProfileIcon').click(() => {
                if ($('#avatar-container-popover').hasClass('active')) {
                    $('#avatar-container-popover').removeClass('active');
                }
                else {
                    $('#avatar-container-popover').addClass('active');
                }
            });

        });
    </script>


    @await RenderSectionAsync("Scripts", required: false)
</body>

</html>