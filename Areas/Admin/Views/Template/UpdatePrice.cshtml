@model CoursePriceUpdateVm

<div class="loader-container">
    <div class="loader"></div>
</div>

<form method="post" onsubmit="activateLoading()">
    <input hidden asp-for="TemplateId" />
    <input hidden asp-for="PriceId" />
    <input type="hidden" id="coursePriceInfos" value='@Html.Raw(Json.Serialize(Model.CoursePriceInfos))'>
    <fieldset class="field-card">
        <div class="add-course-info">
            <div class="add-course-inner-header">
                <h4>Add Course Price</h4>
            </div>
            <div class="add-course-form">
                <div class="input-block">
                    <label class="add-course-label" asp-for="Title"></label>
                    <input type="text" class="form-control" placeholder="Course Price Title" asp-for="Title">
                    <span class="text-danger" asp-validation-for="Title"></span>
                </div>

                <fieldset class="field-card">
                    <div class="add-course-info">
                        <div class="add-course-inner-header">
                            <h4>Price Infos</h4>
                        </div>
                        <div>
                            <a class="btn btn-info-light" data-bs-toggle="collapse" href="#collapsePriceInfosInput" role="button"
                               aria-expanded="false" aria-controls="collapsePriceInfosInput">Add PriceInfo</a>

                            <div class="collapse input-block mt-5" id="collapsePriceInfosInput">
                                <label class="add-course-label">Price Info</label>
                                <input type="text" class="form-control" placeholder="Price Info" id="priceInfo-input">
                                <a class="btn btn-info-light" onclick="addPriceInfo()"> Add + </a>
                            </div>

                            <ol class="list-group list-group-numbered mb-5 mt-5" id="priceInfos_Container">
                            </ol>
                        </div>

                        <div class="widget-btn">
                            <button class="btn btn-info-light next_btn" type="submit">Submit</button>
                        </div>
                    </div>
                </fieldset>

            </div>
        </div>
    </fieldset>
</form>


<script>

    document.addEventListener('DOMContentLoaded', () => {
        const coursePriceInfosJson = document.getElementById('coursePriceInfos').value;
        const coursePriceInfos = JSON.parse(coursePriceInfosJson);

        priceInfos = coursePriceInfos.map(data => ({
            id: guid(),
            content: data.content
        }));

        loadPriceInfos();
    });

    let guid = () => {
        let s4 = () => {
            return Math.floor((1 + Math.random()) * 0x10000)
                .toString(16)
                .substring(1);
        }
        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
    }

    let priceInfos = [];

    function addPriceInfo() {
        const element = document.getElementById('priceInfo-input');
        const content = element.value;

        if (content != null) {
            const priceInfo = {
                id: guid(),
                content: content
            }

            priceInfos.push(priceInfo);

            element.value = '';
            loadPriceInfos();
        }
    }

    function loadPriceInfos() {
        const element = document.getElementById('priceInfos_Container');

        element.innerHTML = priceInfos.map((priceInfo, index) => `
                                    <input hidden name="CoursePriceInfos[${index}].Content" value="${priceInfo.content}" >
                                    <li class="list-group-item d-flex justify-content-between align-items-start">
                                        <div class="ms-2 me-auto">
                                            <div class="fw-bold">${priceInfo.content}</div>
                                        </div>
                                        <a class="badge text-bg-warning rounded-pill pointer" data-bs-toggle="collapse" href="#priceInfo-edit-container-${priceInfo.id}" role="button" aria-expanded="false" aria-controls="priceInfo-edit-container-${priceInfo.id}">
                                            <i class="fa-solid fa-pen-to-square"></i>
                                        </a>
                                        <span class="badge text-bg-danger rounded-pill ml-2 pointer" onclick="deletePriceInfo('${priceInfo.id}')">
                                            <i class="fa-solid fa-trash"></i>
                                        </span>
                                    </li>
                                    <div class="input-block mt-2 collapse" id="priceInfo-edit-container-${priceInfo.id}">
                                        <input type="text" class="form-control" id="priceInfo-edit-${priceInfo.id}" value="${priceInfo.content}">
                                        <a class="btn btn-info-light" onclick="updatePriceInfo('${priceInfo.id}')"> Update </a>
                                    </div>

                                `).join('');
    }



    function updatePriceInfo(id) {
        for (let x in priceInfos) {
            if (priceInfos.hasOwnProperty(x) && priceInfos[x].id == id) {
                priceInfos[x].content = document.getElementById(`priceInfo-edit-${id}`).value;
                break;
            }
        }
        loadPriceInfos();
    }

    function deletePriceInfo(id) {
        let newPriceInfos = [...priceInfos];

        let index = newPriceInfos.findIndex(x => x.id == id);

        if (index !== -1) {
            newPriceInfos.splice(index, 1);

            priceInfos = newPriceInfos;

            loadPriceInfos();
        }
    }
</script>