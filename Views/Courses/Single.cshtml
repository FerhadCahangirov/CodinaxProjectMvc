@model CourseSingleVm;

@{
    ViewData["Title"] = "Single";
}


<script>

    window.addEventListener('scroll', function () {
        const scrollPosition = window.pageYOffset;
        const rotation = scrollPosition * 0.5;
        const movement = scrollPosition * 0.04;

        const student_1 = document.querySelector('.student_1');

        const student_1_observer = new IntersectionObserver(entries => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.transform = `translate3d(0px, ${movement}%, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg)`;
                }
            });
        });

        student_1_observer.observe(student_1);

        const studentCircleLeft = document.querySelector('.student_circle-left');

        const studentCircleLeft_observer = new IntersectionObserver(entries => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.transform = `translate3d(0px, ${movement}%, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(${rotation}deg) skew(0deg, 0deg)`;
                }
            });
        });

        studentCircleLeft_observer.observe(studentCircleLeft);


        const student_1_shape_1 = document.querySelector('.student-1_shape-1');
        const student_1_shape_1_initialWidth = parseFloat('2.75');

        const student_1_shape_1_width = Math.max(student_1_shape_1_initialWidth + scrollPosition * 0.005, student_1_shape_1_initialWidth);

        const student_1_shape_1_observer = new IntersectionObserver(entries => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.width = `${student_1_shape_1_width}rem`
                }
            });
        });

        student_1_shape_1_observer.observe(student_1_shape_1);

        const student_1_shape_2 = document.querySelector('.student-1_shape-2');
        const student_1_shape_2_initialWidth = 76;

        const student_1_shape_2_width = Math.max(student_1_shape_2_initialWidth + scrollPosition * 0.05, student_1_shape_2_initialWidth);


        const student_1_shape_2_observer = new IntersectionObserver(entries => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.width = `${student_1_shape_2_width}px`
                    entry.target.style.transform = `translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(${rotation / 10}deg) skew(0deg, 0deg)`;
                }
            });
        });

        student_1_shape_2_observer.observe(student_1_shape_2);

        const studentCircleRigth = document.querySelector('.student_circle-right');

        const studentCircleRigth_observer = new IntersectionObserver(entries => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.transform = `translate3d(0px, ${movement}%, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(-${rotation}deg) skew(0deg, 0deg)`;
                }
            });
        });

        studentCircleRigth_observer.observe(studentCircleRigth);

        const student_2_shape_1 = document.querySelector('.student-2_shape-1');
        const student_2_shape_1_initialWidth = parseFloat(80);
        const student_2_shape_1_width = Math.max(student_2_shape_1_initialWidth + scrollPosition * 3, student_2_shape_1_initialWidth);

        student_2_shape_1_observer = new IntersectionObserver(entries => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.width = `${student_1_shape_2_width}px`;
                    entry.target.style.transform = `translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(${rotation}deg) skew(0deg, 0deg)`;
                }
            });
        });

        student_2_shape_1_observer.observe(student_2_shape_1);

        const student_2_shape_2 = document.querySelector('.student-2_shape-2');

        student_2_shape_2_observer = new IntersectionObserver(entries => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.transform = `translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(${rotation / 10}deg) skew(0deg, 0deg)`;
                }
            });
        });

        student_2_shape_2_observer.observe(student_2_shape_2);

        const student_2 = document.querySelector('.student_2');

        const student_2_observer = new IntersectionObserver(entries => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.transform = `translate3d(0px, ${movement * 2}%, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg)`;
                }
            });
        });

        student_2_observer.observe(student_2);
    });

    function scrollToCourseContent(){
        const element = document.getElementById('course-content').offsetTop;

        window.scrollTo({
            top: element,
            behavior: 'smooth'
        });
    }

</script>

<main class="main-wrapper">
    <section class="section-hero">
        <div class="padding-global">
            <div class="container-large">
                <div class="padding-section-large">
                    <div class="hero-component">
                        <h1 data-w-id="a9ae2ce4-acd5-b5c6-7cd1-7d29e52438cd" style="transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg); transform-style: preserve-3d; opacity: 1;">@Model.Course.Title </h1>
                    </div>
                </div>
            </div>
        </div>
        <div class="shape"></div>
        <div class="shape is-right"></div>
        <div class="shape is-center"></div>
    </section>

    <header class="section_hero">
        <div class="padding-global">
            <div class="container-large">
                <div class="padding-section-small padding-hero">
                    <div class="w-layout-grid bootstrap_component">
                        <div class="hero_content">
                            <div class="margin-bottom margin-small">
                                <div class="margin-bottom margin-large">
                                    <h1 class="heading-style-h2">
                                        @(string.Join(" ", Model.Course.Template.Heading.Split(' ').Skip(0).Take(Model.Course.Template.Heading.Split(' ').Count() - 2)))
                                        <span class="heading-style-underline">
                                            @(string.Join(" ", Model.Course.Template.Heading.Split(' ').Skip(Math.Max(0, Model.Course.Template.Heading.Split(' ').Length - 2))))
                                        </span>
                                    </h1>
                                </div>
                            </div>
                            <div class="margin-bottom margin-medium">
                                <div class="hero_desc-wrapper">
                                    <p class="text-size-large">@Model.Course.Template.HeadingDescription</p>
                                </div>
                            </div>
                            <div class="margin-bottom margin-large">
                                <div class="info_component">
                                    <div id="w-node-_392f4075-1e0d-0de9-9e64-9c0f5909e398-dcc25c09" class="info-column">
                                        <img src="https://assets-global.website-files.com/6417f234f5b343f280553234/641f33ebf4ae49138567d4e0_icon-location.svg" loading="lazy" alt="Location Icon" class="bootcamp_info-icon">
                                        <div class="text-style-mono text-size-small text-color-blue"><strong>Location:</strong> @Model.Course.Template.Location</div>
                                    </div>
                                    <div id="w-node-_392f4075-1e0d-0de9-9e64-9c0f5909e39e-dcc25c09" class="info-column">
                                        <img src="https://assets-global.website-files.com/6417f234f5b343f280553234/641f33eb0bbd0ab443fa3f94_icon-date.svg" loading="lazy" alt="Date Icon" class="bootcamp_info-icon">
                                        <div class="text-style-mono text-size-small text-color-blue"><strong>Starting:</strong> @Model.Course.Template.StartingDate?.ToString("MMM dd, yyyy")</div>
                                    </div>
                                </div>
                            </div>
                            <div class="button-group">
                                <a href="/Auth/Student/Apply" class="button w-button">Apply Now</a>
                                <div class="hide-mobile-landscape">or</div>
                                <a role="button" onclick="scrollToCourseContent()" class="link-red is-play hide-mobile-landscape w-inline-block w-lightbox" aria-label="open lightbox" aria-haspopup="dialog">
                                    <div>Scroll to course content</div>
                                </a>
                            </div>
                        </div>
                        <div class="bootcamp_image-wrapper">
                            <div id="w-node-_4aba8918-a7de-63e6-4db8-470d4ad92f56-dcc25c09" data-w-id="4aba8918-a7de-63e6-4db8-470d4ad92f56" class="student_1" style="will-change: transform; transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg); transform-style: preserve-3d;">
                                <div id="w-node-d8a363e2-7cc7-825a-8ec6-e184fd1aaf3d-dcc25c09" data-w-id="d8a363e2-7cc7-825a-8ec6-e184fd1aaf3d" class="student-wrapper" style="border-color: rgb(37, 68, 112);">
                                    <img src="/Assets/imgs/icons/output-onlinepngtools (23).png" loading="lazy" data-w-id="de17d8fa-0083-0cf8-9da8-c3b137951e1e" alt="Shape" class="student-1_shape-1" style="will-change: width, height, transform; width: 2.75rem; transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg); transform-style: preserve-3d;">
                                    <img src="/Assets/imgs/icons/output-onlinepngtools (24).png" loading="lazy" data-w-id="591041ee-0b04-2b06-849c-78285efca312" alt="Shape" class="student-1_shape-2" style="will-change: width, height, transform; width: 76px; transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg); transform-style: preserve-3d;">
                                    <img src="/Assets/imgs/course-single/image-from-rawpixel-id-14406523-png.png" loading="lazy" data-w-id="abf42adc-b5c8-8b97-5b30-0b493b327189" sizes="(max-width: 479px) 100vw, (max-width: 767px) 39vw, (max-width: 991px) 25vw, (max-width: 1919px) 17vw, 242.546875px" alt="NeoTech Academy Student" class="student_photo" style="will-change: transform; transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg); transform-style: preserve-3d;">
                                </div>
                                <img src="/Assets/imgs/icons/output-onlinepngtools (25).png" loading="lazy" data-w-id="4c0f9ca5-668a-f3b3-9efe-dfc411c09b3a" alt="Orange Shape" class="student_circle-left" style="will-change: transform; transform: translate3d(0px, 0%, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg); transform-style: preserve-3d;" width="70" height="71">
                            </div>
                            <div data-w-id="f505fe83-c6ee-02f5-379a-282b338c1ed0" class="student_2" style="will-change: transform; transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg); transform-style: preserve-3d;">
                                <div data-w-id="19e1ea7f-97d8-f0fd-cff7-e6f4871a4b86" class="student-wrapper" style="border-color: rgb(37, 68, 112);">
                                    <img src="/Assets/imgs/course-single/image-from-rawpixel-id-13020157-png.png" loading="lazy" data-w-id="19e1ea7f-97d8-f0fd-cff7-e6f4871a4b89" alt="NeoTech Academy Student" class="student_photo" style="will-change: transform; transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg); transform-style: preserve-3d;">
                                    <img src="/Assets/imgs/icons/output-onlinepngtools (26).png" loading="lazy" data-w-id="19e1ea7f-97d8-f0fd-cff7-e6f4871a4b87" alt="Shape" class="student-2_shape-1" style="will-change: width, height, transform; width: 80px; transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg); transform-style: preserve-3d;">
                                    <img src="/Assets/imgs/icons/output-onlinepngtools (35).png" loading="lazy" data-w-id="19e1ea7f-97d8-f0fd-cff7-e6f4871a4b88" alt="Shape" class="student-2_shape-2" style="will-change: transform; transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg); transform-style: preserve-3d;">
                                </div>
                                <img src="/Assets/imgs/icons/output-onlinepngtools (32).png" loading="lazy" data-w-id="c49b5944-b5e5-9e02-6f90-72c3e305ba9e" alt="Orange Shape" class="student_circle-right" style="will-change: transform; transform: translate3d(0%, 0px, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg); transform-style: preserve-3d;" width="70" height="71">
                            </div>
                            <img src="/Assets/imgs/icons/output-onlinepngtools (22).png" loading="lazy" style="opacity: 1;" data-w-id="a66d08e1-3ab6-0437-2dac-214ba41fdbf6" alt="Shape Arrow" class="arrow_bootcamp">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <header id="overview" class="section_bootcamp">
        <div class="padding-global">
            <div class="container-small">
                <div class="padding-section-large">
                    <div class="text-align-center">
                        <div data-aos="fade" data-aos-delay="500" data-aos-duration="500">
                            <img src="/Assets/imgs/icons/output-onlinepngtools (33).png" loading="lazy" data-w-id="2aab01d4-7e49-3840-b306-c32152e000b7" alt="Icon Highlight" style="opacity: 1; transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg); transform-style: preserve-3d;" class="opacity-change-icon" width="127" height="55">
                        </div>
                        <div class="margin-bottom margin-small">

                            <h2><span class="heading-style-underline underline_free">Future</span> job title:<br></h2>
                        </div>
                        <div class="margin-bottom margin-large hide-mobile-portrait">
                            @if (Model.Course.Template.FutureJobTitles != null && Model.Course.Template.FutureJobTitles.Any())
                            {
                                <div class="flex flex-type">
                                    <h3 id="typed" class="h3-mobile"></h3>
                                </div>
                                <div id="typed-strings" style="display: none;">
                                    @foreach (var item in Model.Course.Template.FutureJobTitles
                                        .Where(EntityQueryFilters<FutureJobTitle>.LayoutFilter)
                                        .OrderBy(OrderFilters<FutureJobTitle>.ByCreatedDate))
                                    {
                                        <p>@item.Content</p>
                                    }
                                </div>
                            }

                        </div>

                        <div class="margin-bottom margin-large show-mobile" bis_skin_checked="1">
                            <div class="flex flex-type" bis_skin_checked="1">
                                <h3 id="typed-mobile" class="h3-mobile"></h3>
                            </div>
                            <div id="typed-strings-mobile" bis_skin_checked="1" style="display: none;">
                                @foreach (var item in Model.Course.Template.FutureJobTitles
                                .Where(EntityQueryFilters<FutureJobTitle>.LayoutFilter)
                                .OrderBy(OrderFilters<FutureJobTitle>.ByCreatedDate))
                                {
                                    <p>@item.Content</p>
                                }
                            </div>
                        </div>

                        <div class="margin-bottom margin-large">
                            <p data-w-id="b5586f1a-928a-25af-170c-d4a42ab4e19e" class="text-size-large" style="opacity: 1;">
                                @Model.Course.Template.FutureJobDesc
                            </p>
                        </div>
                        <div class="margin-bottom margin-large">
                            <h3 data-w-id="93e73579-bf7c-9ebf-4f79-d86258fc928c" style="opacity: 1;">You will make: <span data-w-id="33a593b9-6163-9b53-6750-5af8eb3dd24b" class="heading-style-bg" style="opacity: 1; transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg); transform-style: preserve-3d;">@Model.Course.Template.FutureJobSalary</span></h3>
                        </div>
                    </div>
                    <div data-w-id="8e5b712c-829d-524d-3522-405a8ea27d5c" class="bracket_component">
                        <div class="text-align-center text-color-blue text-weight-bold">@Model.Course.Template.Properties</div>
                    </div>
                </div>
            </div>
        </div>
    </header>

    @if(Model.Course.Template?.Tools.Count() > 0)
    {
        <section class="section">
            <div class="padding-global">
                <div class="container-large">
                    <div class="padding-section-small">
                        <div class="margin-bottom margin-large">
                            <h3 class="text-align-center">The tools you will use</h3>
                        </div>
                        <div class="flex flex-tools">
                            @if(Model.Course.Template?.Tools.Count() > 15)
                            {
                               foreach (var (index, tool) in Model.Course.Template.Tools
                                .Where(EntityQueryFilters<Tool>.LayoutFilter)
                                .OrderBy(OrderFilters<Tool>.ByCreatedDate)
                                .Select((value, i) => (i, value)))
                                {
                                    <div class="margin-bottom margin-medium margin-none" data-aos="fade-right" data-aos-delay="@(100 * (index + 1))" data-aos-duration="500">
                                        <div data-w-id="c334edcc-e2cc-1c49-01f5-8f0e2f6034c6" class="tag tag-icon">
                                            <img src="@Model.BaseUrl/@tool.PathOrContainer/@tool.FileName" loading="lazy" alt="NeoTech Academy Icon" class="icon-height-xsmall icon-tag">
                                            <div class="text-size-regular text-style-allcaps text-tag">@tool.Content</div>
                                        </div>
                                    </div>
                                } 
                            }
                            else{
                                foreach (var (index, tool) in Model.Course.Template.Tools
                                .Where(EntityQueryFilters<Tool>.LayoutFilter)
                                .OrderBy(OrderFilters<Tool>.ByCreatedDate)
                                .Select((value, i) => (i, value)))
                                {
                                    <div class="margin-bottom margin-medium margin-none" data-aos="fade-right" data-aos-delay="@(200 * (index + 1))" data-aos-duration="500">
                                        <div data-w-id="c334edcc-e2cc-1c49-01f5-8f0e2f6034c6" class="tag tag-icon">
                                            <img src="@Model.BaseUrl/@tool.PathOrContainer/@tool.FileName" loading="lazy" alt="NeoTech Academy Icon" class="icon-height-xsmall icon-tag">
                                            <div class="text-size-regular text-style-allcaps text-tag">@tool.Content</div>
                                        </div>
                                    </div>
                                } 
                            }
                            

                        </div>
                    </div>
                </div>
            </div>
        </section>
    }
   
    @if(Model.Course.Template?.Topics.Count() > 0)
    {
        <section class="section">
            <div class="padding-global">
                <div class="container-large">
                    <div class="padding-section-small">
                        <div class="margin-bottom margin-large">
                            <h3 class="text-align-center">The topics you will learn</h3>
                        </div>
                        <div class="flex">

                            @foreach (var (index, topic) in Model.Course.Template.Topics
                                .Where(EntityQueryFilters<Topic>.LayoutFilter)
                                .OrderBy(OrderFilters<Topic>.ByCreatedDate)
                                .Select((value, i) => (i, value)))
                            {
                                <div class="margin-bottom margin-medium margin-02" data-aos="fade-right" data-aos-delay="@(200 * (index + 1))" data-aos-duration="500">
                                    <div data-w-id="451603c6-7ceb-8720-0ab8-c830ae7c32f5" class="tag tag-icon background-color-antiquewhite">
                                        <img src="https://assets-global.website-files.com/6417f234f5b343f280553234/642bba93d2094bca11f6c5d7_icon-hashtag.svg" loading="lazy" alt="Hashtag Icon" class="icon-height-xsmall icon-tag">
                                        <div class="text-size-regular text-style-allcaps text-color-blue text-style-mono text-tag">@topic.Content</div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </section>
    }
    

    <header class="section-courses is-single" id="course-content">
        <div class="padding-global">
            <div class="container-large">
                <div class="padding-section-large">
                    <div class="blogpost4_content-wrapper">
                        <div class="blogpost4_content">
                            <div class="text-rich-text w-richtext">
                                <h2>Course description</h2>
                                <br />
                                <P>
                                    @Model.Course.Template.Description
                                </P>
                                <br />
                                <br />
                                @if (!string.IsNullOrEmpty(Model.Course.Template.CourseFragmentVideoName))
                                {
                                    <figure class="w-richtext-figure-type-video w-richtext-align-fullwidth" style="padding-bottom:56.206088992974244%">
                                        <div>
                                            <video controls="true" src="@Model.BaseUrl/@Model.Course.Template.CourseFragmentVideoPathOrContainer/@Model.Course.Template.CourseFragmentVideoName"></video>
                                        </div>
                                    </figure>
                                }

                                <br />
                                <br />
                                @Html.Raw(Model.Course.Template.Content)
                            </div>
                        </div>

                        <div class="div-block">
                            @if(Model.Course.Template?.Prices.Count() > 0)
                            {
                                foreach(var price in Model.Course.Template.Prices
                                    .Where(EntityQueryFilters<Price>.LayoutFilter)
                                    .OrderBy(OrderFilters<Price>.ByCreatedDate))
                                {
                                    <div class="course-pricing-card">
                                        <div class="course-price-wrapper">
                                            <h2 class="heading-style-h4">@price.Title</h2>
                                        </div>
                                        <div class="padding-bottom padding-xsmall"></div>

                                        <div class="course-pricing-list">
                                            @if(price.PriceInfos.Count() > 0)
                                            {
                                                foreach(var priceInfo in price.PriceInfos
                                                    .Where(EntityQueryFilters<PriceInfo>.LayoutFilter)
                                                    .OrderBy(OrderFilters<PriceInfo>.ByCreatedDate))
                                                {
                                                    <div class="course-pricing-features">
                                                        <div class="text-weight-bold text-size-xsmall" bis_skin_checked="1">
                                                        <img src="/Assets/imgs/icons/check.png" loading="lazy" width="16" alt="Icon" style="margin-right: 0.825rem;">
                                                            @priceInfo.Content
                                                            </div>
                                                    </div>
                                                }
                                            }
                                            
                                        </div>
                                        <div class="padding-bottom padding-large"></div>
                                        @* <a href="/contact" class="button max-width-full w-button">Apply Now</a> *@
                                    </div>
                                }
                            }

                            
                           <partial model="@Model" name="AdvicedCoursesPartial"/>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>

    @await Component.InvokeAsync("Subscribe")

</main>